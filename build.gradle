plugins {
    id 'java'
    id 'xyz.jpenilla.run-paper' version '2.3.0'
    id 'org.jetbrains.kotlin.jvm'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.github.s0lux'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
}

def exposedVersion = "0.52.0"

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT"
    shadow "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "io.insert-koin:koin-core:3.5.6"

    // MC Coroutine
    implementation "com.github.shynixn.mccoroutine:mccoroutine-bukkit-api:2.17.0"
    implementation "com.github.shynixn.mccoroutine:mccoroutine-bukkit-core:2.17.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.9.0-RC"

    // Command API
    compileOnly "dev.jorel:commandapi-bukkit-core:9.5.1"
    implementation "dev.jorel:commandapi-bukkit-shade:9.5.1"
}

tasks {
    runServer {
        minecraftVersion("1.21")
        jvmArgs("-Dcom.mojang.eula.agree=true")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
kotlin {
    jvmToolchain(21)
}
